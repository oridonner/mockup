version: "3.3"
services:
  # mongoimport:
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: "1"
  #         memory: 2048M
  #   image: mongo
  #   container_name: mongo-import-container
  #   depends_on:
  #     - mongo
  #   networks:
  #     - default_bd
  #   volumes:
  #     - ./internals/data/import.sh:/var/data/import.sh
  #     - ./internals/data/main/:/var/data/main/
  #   command: /var/data/import.sh

  # mongo:
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: "0.50"
  #         memory: 2048M
  #   restart: always
  #   image: mongo
  #   networks:
  #     - default_bd
  #   volumes:
  #     - mongo-data:/var/data
  #   ports:
  #     - 4307:27017

  auth:
    build:
      context: .
      dockerfile: ./services/auth/Dockerfile.dev
    volumes:
      - /var/app/server/service/dist
      - /var/app/server/service/node_modules
      - ./services/auth/src:/var/app/server/service/src
    ports:
      - 5000:5000
    env_file:
      - .env
    networks:
      - default_bd
    environment:
      - SERVICE_PORT=5000
      - SERVICE_NAME=auth

  faker:
    depends_on:
      - auth
    ports:
      - 5001:5000
    build:
      context: .
      dockerfile: ./services/faker/Dockerfile.dev
    volumes:
      - /var/app/server/service/dist
      - /var/app/server/service/node_modules
      - ./services/faker/src:/var/app/server/service/src
    env_file:
      - .env
    networks:
      - default_bd
    environment:
      - SERVICE_PORT=5000
      - SERVICE_NAME=faker

  client:
    restart: always
    depends_on:
      - auth
    networks:
      - default_bd
    build:
      context: .
      dockerfile: ./clients/front/Dockerfile.dev
    volumes:
      - /var/front/build
      - /var/front/node_modules
      - ./clients/front/src:/var/front/src
    environment:
      - SERVICE_PORT=80
      - SERVICE_NAME=client

  server:
    depends_on:
      - auth
    restart: always
    image: nginx
    networks:
      - default_bd
    volumes:
      - ./server/default.dev.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 80:80
      - 8080:8080

volumes:
  mongo-data:

networks:
  default_bd:
    driver: bridge
    ipam:
      config:
        - subnet: 172.18.57.0/24
